openapi: 3.0.3
info:
  version: 1.0.0
  title: Swagger Inventory Management App - OpenAPI 3.0
  contact:
    email: hubert.rybicki.hr@gmail.com
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: http://localhost:8080
    description: Local ENV
paths:
  /api/v1/stores:
    get:
      summary: Find all stores
      operationId: getAllStores
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/StoreDTO"
    post:
      summary: Create new store
      description: Required user token with ADMIN role
      operationId: createStore
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateStoreDTO"
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StoreDTO"
        '403':
          description: Invalid token / No Token / No Permission
      security:
        - BearerAuth: []
  /api/v1/stores/{storeId}:
    get:
      summary: Find store by ID
      operationId: getStoreById
      parameters:
        - name: storeId
          in: path
          description: ID of store to return
          required: true
          schema:
            type: integer
            format: int64
            example: 1
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StoreDTO"
        '400':
          description: Invalid storeId
        '404':
          description: Store not found
    patch:
      summary: Update store by ID
      description: Required user token with ADMIN role
      operationId: updateStore
      parameters:
        - name: storeId
          in: path
          description: ID of store to update
          required: true
          schema:
            type: integer
            format: int64
            example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateStoreDTO"
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StoreDTO"
        '400':
          description: Invalid storeId
        '404':
          description: Store not found
        '403':
          description: Invalid token / No Token / No Permission
      security:
        - BearerAuth: []

components:
  schemas:
    StoreDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: "Empik"
    CreateStoreDTO:
      type: object
      properties:
        name:
          type: string
          example: "H&M"
    UpdateStoreDTO:
      type: object
      properties:
        newStoreName:
          type: string
          example: "Zara"
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: Basic form of JWT with user email and authorities
security:
  - BearerAuth: []
